version: "2"
x-redash-service: &redash-service
  image: redash/redash:preview
  #image: redash/redash:10.1.0.b50633
  depends_on:
    - postgres
    - redis
  #env_file: /opt/redash/env
  restart: always
services:
  server:
    <<: *redash-service
    command: server
    ports:
      - "5000:5000"
    environment:
      REDASH_WEB_WORKERS: 4
  scheduler:
    <<: *redash-service
    command: scheduler
    environment:
      QUEUES: "celery"
      WORKERS_COUNT: 1
  scheduled_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "scheduled_queries,schemas"
      WORKERS_COUNT: 1
  adhoc_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "queries"
      WORKERS_COUNT: 2
  redis:
    image: redis:7.2.1-alpine3.18
    container_name: redis
    restart: unless-stopped
    ports:
     - 6379:6379
    volumes:
      - ./data/redis:/data
      - /usr/share/zoneinfo/Asia/Taipei:/etc/localtime:ro
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 500M
        reservations:
          cpus: '0.25'
          memory: 20M
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 5s
  postgres:
    image: postgres:15.4-alpine3.18
    container_name: postgres
    restart: unless-stopped
    ports:
     - 5432:5432
    environment:
      #POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: ${PGDATA}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - /usr/share/zoneinfo/Asia/Taipei:/etc/localtime:ro
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M
        reservations:
          cpus: '0.25'
          memory: 20M
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 5s
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 5s
      timeout: 10s
      retries: 5
  nginx:
    image: redash/nginx:latest
    ports:
      - "80:80"
    depends_on:
      - server
    links:
      - server:redash
    restart: always