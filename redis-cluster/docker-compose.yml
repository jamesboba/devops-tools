version: "3"
services:
  redis1:
    image: redis:7.2.1-alpine3.18
    command: redis-server --port 6999 --requirepass password --masterauth password --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "6999:6999"
    environment:
      - TZ=Asia/Taipei
      - REDIS_MASTER_PASSWORD=password
    volumes:
      - ./data/redis1:/data
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "6999", "cluster", "info", "-a" , "password" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis2:
    image: redis:7.2.1-alpine3.18
    command: redis-server --port 7001 --requirepass password --masterauth password --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7001:7001"
    environment:
      - TZ=Asia/Taipei
      - REDIS_MASTER_PASSWORD=password
    volumes:
      - ./data/redis2:/data
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7001", "cluster", "info", "-a" , "password" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis3:
    image: redis:7.2.1-alpine3.18
    command: redis-server --port 7002 --requirepass password --masterauth password --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7002:7002"
    environment:
      - TZ=Asia/Taipei
      - REDIS_MASTER_PASSWORD=password
    volumes:
      - ./data/redis3:/data
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7002", "cluster", "info", "-a" , "password" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis4:
    image: redis:7.2.1-alpine3.18
    command: redis-server --port 7003 --requirepass password --masterauth password --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7003:7003"
    environment:
      - TZ=Asia/Taipei
      - REDIS_MASTER_PASSWORD=password
    volumes:
      - ./data/redis4:/data
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7003", "cluster", "info", "-a" , "password" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis5:
    image: redis:7.2.1-alpine3.18
    command: redis-server --port 7004 --requirepass password --masterauth password --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7004:7004"
    environment:
      - TZ=Asia/Taipei
      - REDIS_MASTER_PASSWORD=password
    volumes:
      - ./data/redis5:/data
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7004", "cluster", "info", "-a" , "password" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis6:
    image: redis:7.2.1-alpine3.18
    command: redis-server --port 7005 --requirepass password --masterauth password --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7005:7005"
    environment:
      - TZ=Asia/Taipei
    volumes:
      - ./data/redis6:/data
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "7005", "cluster", "info", "-a" , "password" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis-cluster-creator:
    image: redis:7.2.1-alpine3.18
    entrypoint: [/bin/sh,-c,'echo "yes" | redis-cli --cluster create redis1:6999 redis2:7001 redis3:7002 redis4:7003 redis5:7004 redis6:7005 --cluster-replicas 1 -a password']
    environment:
      - TZ=Asia/Taipei
      - REDIS_MASTER_PASSWORD=password
    depends_on:
      redis1:
        condition: service_healthy
      redis2:
        condition: service_healthy
      redis3:
        condition: service_healthy
      redis4:
        condition: service_healthy
      redis5:
        condition: service_healthy
      redis6:
        condition: service_healthy